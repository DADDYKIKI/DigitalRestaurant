// Generated by view binder compiler. Do not edit!
package com.example.digitalrestaurant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.digitalrestaurant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPageOneBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ConstraintLayout constraintLayout3;

  @NonNull
  public final TextView findDishes;

  @NonNull
  public final TextView findRestaurants;

  @NonNull
  public final RecyclerView locationRecycler;

  @NonNull
  public final RecyclerView myRecycler1;

  @NonNull
  public final TextView pageOneMenuKey;

  @NonNull
  public final TextView pageOneomekey;

  @NonNull
  public final RecyclerView restaurantsRecycler;

  @NonNull
  public final ScrollView scrollView2;

  @NonNull
  public final TextView searchLocation;

  private ActivityPageOneBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout constraintLayout, @NonNull ConstraintLayout constraintLayout3,
      @NonNull TextView findDishes, @NonNull TextView findRestaurants,
      @NonNull RecyclerView locationRecycler, @NonNull RecyclerView myRecycler1,
      @NonNull TextView pageOneMenuKey, @NonNull TextView pageOneomekey,
      @NonNull RecyclerView restaurantsRecycler, @NonNull ScrollView scrollView2,
      @NonNull TextView searchLocation) {
    this.rootView = rootView;
    this.constraintLayout = constraintLayout;
    this.constraintLayout3 = constraintLayout3;
    this.findDishes = findDishes;
    this.findRestaurants = findRestaurants;
    this.locationRecycler = locationRecycler;
    this.myRecycler1 = myRecycler1;
    this.pageOneMenuKey = pageOneMenuKey;
    this.pageOneomekey = pageOneomekey;
    this.restaurantsRecycler = restaurantsRecycler;
    this.scrollView2 = scrollView2;
    this.searchLocation = searchLocation;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPageOneBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPageOneBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_page_one, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPageOneBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.constraintLayout3;
      ConstraintLayout constraintLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout3 == null) {
        break missingId;
      }

      id = R.id.findDishes;
      TextView findDishes = ViewBindings.findChildViewById(rootView, id);
      if (findDishes == null) {
        break missingId;
      }

      id = R.id.findRestaurants;
      TextView findRestaurants = ViewBindings.findChildViewById(rootView, id);
      if (findRestaurants == null) {
        break missingId;
      }

      id = R.id.locationRecycler;
      RecyclerView locationRecycler = ViewBindings.findChildViewById(rootView, id);
      if (locationRecycler == null) {
        break missingId;
      }

      id = R.id.myRecycler1;
      RecyclerView myRecycler1 = ViewBindings.findChildViewById(rootView, id);
      if (myRecycler1 == null) {
        break missingId;
      }

      id = R.id.pageOneMenuKey;
      TextView pageOneMenuKey = ViewBindings.findChildViewById(rootView, id);
      if (pageOneMenuKey == null) {
        break missingId;
      }

      id = R.id.pageOneomekey;
      TextView pageOneomekey = ViewBindings.findChildViewById(rootView, id);
      if (pageOneomekey == null) {
        break missingId;
      }

      id = R.id.restaurantsRecycler;
      RecyclerView restaurantsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (restaurantsRecycler == null) {
        break missingId;
      }

      id = R.id.scrollView2;
      ScrollView scrollView2 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView2 == null) {
        break missingId;
      }

      id = R.id.searchLocation;
      TextView searchLocation = ViewBindings.findChildViewById(rootView, id);
      if (searchLocation == null) {
        break missingId;
      }

      return new ActivityPageOneBinding((ConstraintLayout) rootView, constraintLayout,
          constraintLayout3, findDishes, findRestaurants, locationRecycler, myRecycler1,
          pageOneMenuKey, pageOneomekey, restaurantsRecycler, scrollView2, searchLocation);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
