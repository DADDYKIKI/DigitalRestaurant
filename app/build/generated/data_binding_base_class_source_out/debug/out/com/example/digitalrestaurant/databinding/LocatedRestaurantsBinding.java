// Generated by view binder compiler. Do not edit!
package com.example.digitalrestaurant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.digitalrestaurant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LocatedRestaurantsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ConstraintLayout constraintLayout4;

  @NonNull
  public final TextView listLocation;

  @NonNull
  public final TextView listsOfRestNames;

  private LocatedRestaurantsBinding(@NonNull LinearLayout rootView,
      @NonNull ConstraintLayout constraintLayout4, @NonNull TextView listLocation,
      @NonNull TextView listsOfRestNames) {
    this.rootView = rootView;
    this.constraintLayout4 = constraintLayout4;
    this.listLocation = listLocation;
    this.listsOfRestNames = listsOfRestNames;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LocatedRestaurantsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LocatedRestaurantsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.located_restaurants, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LocatedRestaurantsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.constraintLayout4;
      ConstraintLayout constraintLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout4 == null) {
        break missingId;
      }

      id = R.id.listLocation;
      TextView listLocation = ViewBindings.findChildViewById(rootView, id);
      if (listLocation == null) {
        break missingId;
      }

      id = R.id.listsOfRestNames;
      TextView listsOfRestNames = ViewBindings.findChildViewById(rootView, id);
      if (listsOfRestNames == null) {
        break missingId;
      }

      return new LocatedRestaurantsBinding((LinearLayout) rootView, constraintLayout4, listLocation,
          listsOfRestNames);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
