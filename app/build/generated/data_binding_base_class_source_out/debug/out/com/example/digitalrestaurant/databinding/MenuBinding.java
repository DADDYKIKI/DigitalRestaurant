// Generated by view binder compiler. Do not edit!
package com.example.digitalrestaurant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.digitalrestaurant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MenuBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView basket;

  @NonNull
  public final TextView logout;

  @NonNull
  public final TextView logout2;

  @NonNull
  public final TextView logout3;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView5;

  private MenuBinding(@NonNull LinearLayout rootView, @NonNull TextView basket,
      @NonNull TextView logout, @NonNull TextView logout2, @NonNull TextView logout3,
      @NonNull TextView textView3, @NonNull TextView textView5) {
    this.rootView = rootView;
    this.basket = basket;
    this.logout = logout;
    this.logout2 = logout2;
    this.logout3 = logout3;
    this.textView3 = textView3;
    this.textView5 = textView5;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MenuBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MenuBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.menu, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MenuBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.basket;
      TextView basket = ViewBindings.findChildViewById(rootView, id);
      if (basket == null) {
        break missingId;
      }

      id = R.id.logout;
      TextView logout = ViewBindings.findChildViewById(rootView, id);
      if (logout == null) {
        break missingId;
      }

      id = R.id.logout2;
      TextView logout2 = ViewBindings.findChildViewById(rootView, id);
      if (logout2 == null) {
        break missingId;
      }

      id = R.id.logout3;
      TextView logout3 = ViewBindings.findChildViewById(rootView, id);
      if (logout3 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      return new MenuBinding((LinearLayout) rootView, basket, logout, logout2, logout3, textView3,
          textView5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
