// Generated by view binder compiler. Do not edit!
package com.example.digitalrestaurant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.digitalrestaurant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class VendorLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText enterLoginEmailV;

  @NonNull
  public final EditText enterLoginPaswdV;

  @NonNull
  public final TextView loginWarningTextV;

  @NonNull
  public final TextView signInLabelText;

  @NonNull
  public final Button signSubBtnV;

  @NonNull
  public final Button signupV;

  private VendorLoginBinding(@NonNull ConstraintLayout rootView, @NonNull EditText enterLoginEmailV,
      @NonNull EditText enterLoginPaswdV, @NonNull TextView loginWarningTextV,
      @NonNull TextView signInLabelText, @NonNull Button signSubBtnV, @NonNull Button signupV) {
    this.rootView = rootView;
    this.enterLoginEmailV = enterLoginEmailV;
    this.enterLoginPaswdV = enterLoginPaswdV;
    this.loginWarningTextV = loginWarningTextV;
    this.signInLabelText = signInLabelText;
    this.signSubBtnV = signSubBtnV;
    this.signupV = signupV;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static VendorLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static VendorLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.vendor_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static VendorLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.enterLoginEmailV;
      EditText enterLoginEmailV = ViewBindings.findChildViewById(rootView, id);
      if (enterLoginEmailV == null) {
        break missingId;
      }

      id = R.id.enterLoginPaswdV;
      EditText enterLoginPaswdV = ViewBindings.findChildViewById(rootView, id);
      if (enterLoginPaswdV == null) {
        break missingId;
      }

      id = R.id.loginWarningTextV;
      TextView loginWarningTextV = ViewBindings.findChildViewById(rootView, id);
      if (loginWarningTextV == null) {
        break missingId;
      }

      id = R.id.signInLabelText;
      TextView signInLabelText = ViewBindings.findChildViewById(rootView, id);
      if (signInLabelText == null) {
        break missingId;
      }

      id = R.id.signSubBtnV;
      Button signSubBtnV = ViewBindings.findChildViewById(rootView, id);
      if (signSubBtnV == null) {
        break missingId;
      }

      id = R.id.signupV;
      Button signupV = ViewBindings.findChildViewById(rootView, id);
      if (signupV == null) {
        break missingId;
      }

      return new VendorLoginBinding((ConstraintLayout) rootView, enterLoginEmailV, enterLoginPaswdV,
          loginWarningTextV, signInLabelText, signSubBtnV, signupV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
